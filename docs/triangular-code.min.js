/**
 * @license
 * https://github.com/lizongying/triangular-code
 */
class TriangularCode{constructor(t,e=200,s="green",i="white",l=""){this.container=t;this.scale=Math.sin(this.degreesToRadians(60));this._svgNamespace="http://www.w3.org/2000/svg";this.color=s;this.colorBackground=i;this.text=l;this.updateSize(e)}updateSize(t){this.size=t;const e=this.container;let s=e.querySelector("svg");if(s){while(s.firstChild){s.removeChild(s.firstChild)}}else{s=document.createElementNS(this._svgNamespace,"svg");s.setAttribute("transform",`scale(1,${this.scale})`);e.appendChild(s)}s.setAttribute("width",`${t}`);s.setAttribute("height",`${t}`);s.setAttribute("viewBox",`0 0 ${t} ${t}`);this._svg=s;this.encode()}updateText(t){this.text=t;const e=this.container;let s=e.querySelector("svg");if(s){while(s.firstChild){s.removeChild(s.firstChild)}}else{s=document.createElementNS(this._svgNamespace,"svg");s.setAttribute("transform",`scale(1,${this.scale})`);e.appendChild(s)}this._svg=s;this.encode()}degreesToRadians(t){return t*(Math.PI/180)}stringToBinary(t){const e=new TextEncoder;const s=e.encode(t);return Array.from(s).flatMap((t=>t.toString(2).padStart(8,"0").split(""))).map(Number)}encode(t=this.text){this.text=t;const e=this.color;const s=this.colorBackground;let i=this.stringToBinary(t);console.log("data",i);if(i.length<32){i=i.concat(new Array(32-i.length).fill(0))}let l=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0];if(i.length>32){l=l.concat([0])}l=l.concat(i);let n=[0,0,0,1,0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1];let o=l.length+25;let r=Math.ceil(Math.sqrt(o));let h=this.size/r;let a=0;let c=0;for(let t=0;t<r;t++){let i=2*t+1;if(t>r-6){i-=(5-(r-t))*2+1;let l=t-(r-5);let o=2*l+1;for(let i=0;i<o;i++){let o=this.size-5/2*h-l*h/2;let r=t*h;let a;let d;let g;if(i%2===0){a=[o+i*h/2,r];d=[o+i*h/2-h/2,r+h];g=[o+(i*h/2+h/2),r+h]}else{a=[o+i*h/2,r+h];d=[o+i*h/2-h/2,r];g=[o+(i*h/2+h/2),r]}const u=document.createElementNS(this._svgNamespace,"polygon");u.setAttribute("points",`${a.join(",")} ${d.join(",")} ${g.join(",")}`);if(c<n.length&&n[c]===1){u.setAttribute("fill",e)}else{u.setAttribute("fill",s)}this._svg.appendChild(u);c++}}for(let n=0;n<i;n++){let i=this.size/2-t*h/2;let o=t*h;let r;let c;let d;if(n%2===0){r=[i+n*h/2,o];c=[i+n*h/2-h/2,o+h];d=[i+(n*h/2+h/2),o+h]}else{r=[i+n*h/2,o+h];c=[i+n*h/2-h/2,o];d=[i+(n*h/2+h/2),o]}const g=document.createElementNS(this._svgNamespace,"polygon");g.setAttribute("points",`${r.join(",")} ${c.join(",")} ${d.join(",")}`);if(a<l.length&&l[a]===1){g.setAttribute("fill",e)}else{g.setAttribute("fill",s)}this._svg.appendChild(g);a++}}}}